{"remainingRequest":"/Users/admin/web/app/node_modules/babel-loader/lib/index.js!/Users/admin/web/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/web/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/web/app/src/views/Chats.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/web/app/src/views/Chats.vue","mtime":1632906478686},{"path":"/Users/admin/web/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/web/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/admin/web/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/web/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chats.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t\t<v-card fill-height\n\t\theight=\"100%\"\n\t\tapp>\n<chat-window :currentUserId=\"currentUserId\" \n\t\t\t :height=\"height\"\n\t\t\t :rooms=\"rooms\" \n\t\t\t :messages=\"messages\"\n\t\t\t :messagesLoaded=\"messagesLoaded\"\n\t\t\t :roomsLoaded=\"roomsLoaded\"\n\t\t\t :show-new-messages-divider=\"false\"\n\t\t\t @send-message=\"sendMessage\"\n\t\t\t @fetch-messages=\"fetchMessages\"/>\n\t\t</v-card>\n</template>\n\n<script>\n  import ChatWindow from 'vue-advanced-chat'\n  import 'vue-advanced-chat/dist/vue-advanced-chat.css'\n  import firebase from \"firebase\"\n\n  export default {\n\tmethods:{\n\t\tasync fetchMessages({room, options={}}){\n\t\t\tthis.messages = []\n\t\t\tthis.messagesLoaded = false\n\t\t\tvar info = room.roomId\n\t\t\tthis.currentRoomId = info\n\t\t\tconsole.log(\"bullshit\")\n\t\t\t\n\t\t\tvar messages = firebase.firestore().collection(\"messages\").doc(this.currentRoomId).collection(\"messages\")\n\n\t\t\tmessages.where(\"senderId\", \"!=\", this.$store.state.user.id).where(\"seen\", \"==\", false).get().then((docSnapshot) => {\n\t\t\t\tconsole.log('outside loop')\n\t\t\t\tdocSnapshot.forEach((doc) => {\n\t\t\t\t\tconsole.log('inside loop')\n\t\t\t\t\tconsole.log(doc.data().seen)\n\t\t\t\t\tconsole.log(doc.data().username)\n\t\t\t\t\tconsole.log(doc.data().content)\n\t\t\t\t\tmessages.doc(doc.id).update({\n\t\t\t\t\t\tseen:true\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t\t\n\t\t\tmessages.orderBy(\"timestamp\").get().then((docSnapshot) => {\n\t\t\t\tdocSnapshot.forEach((message) => {\n\t\t\t\tthis.messages.push(message.data())\n\n\t\t\t\tconsole.log(message.data().content)\n\t\t\t})\n\t\t\tthis.messagesLoaded = true\n\t\t\t})\n\t\t},\n\n\t\tasync sendMessage(roomId, content, files, replyMessage, usersTag){\n\t\t\t\t/*\n\t\t\t\t*/\n\n\t\t\t\tvar info = roomId\n\t\t\t\t\n\t\t\t\tvar messageTemplate =\n\t\t\t\t\t{\n\t\t\t\t\t_id: info.roomId,\n\t\t\t\t\tcontent: info.content,\n\t\t\t\t\tsenderId: this.$store.state.user.id,\n\t\t\t\t\tusername: this.$store.state.user.name,\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\t\t\tsaved: true,\n\t\t\t\t\tdistributed: true,\n\t\t\t\t\tseen: false, \n\t\t\t\t\t}\n\n\t\t\t\tvar fileTemplate = \n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Example\",\n\t\t\t\t\t\tsize: 0,\n\t\t\t\t\t\ttype: 'png',\n\t\t\t\t\t\taudio: false, \n\t\t\t\t\t\tduration: 0, \n\t\t\t\t\t\turl: 'ex.com',\n\t\t\t\t\t\tpreview: 'ex.com'\n\t\t\t\t\t}\t\n\n\n\t\t\t\tconsole.log(\"Your message is:\")\n\t\t\t\tif(replyMessage == null){\n\t\t\t\t\t\tvar request = await firebase.firestore().collection('messages').doc(info.roomId).collection('messages').doc().set(messageTemplate)\n\t\t\t\t\t\tthis.messages.push(messageTemplate)\n\t\t\t\t}else{\n\t\t\t\t\tvar replyTemplate = \n\t\t\t\t\t{\n\t\t\t\t\t\tcontent: replyMessage.content,\n\t\t\t\t\t\tsenderId: replyMessage.senderId,\n\t\t\t\t\t}\n\t\t\t\t\tif(replyMessage.files.length > 0){\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t},\n\tasync beforeMount(){\n\t\tconsole.log(this.$store.state.user.id)\n\t\tthis.currentUserId = this.$store.state.user.id\n\t\t\n\t\tvar chat_rooms = await firebase.firestore()\n\t\t.collection('chats')\n\t\t.where(\"users\", \"array-contains\", this.$store.state.user.id)\n\t\t.get()\n\t\t\n\t\tchat_rooms.forEach((doc) => {\n\t\t\tvar roomTemplate = \n\t\t\t\t\t{\n\t\t\t\t\troomId: null,\n\t\t\t\t\troomName: 'Room 1',\n\t\t\t\t\tlastMessage: {\n\t\t\t\t\tcontent: 'Last message received',\n\t\t\t\t\tsenderId: 1234,\n\t\t\t\t\tusername: 'John Doe',\n\t\t\t\t\ttimestamp: null,\n\t\t\t\t\t},\n\t\t\t\t\tusers: [\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: 1234,\n\t\t\t\t\t\tusername: 'John Doe',\n\t\t\t\t\t\tstatus: {\n\t\t\t\t\t\tstate: 'offline',\n\t\t\t\t\t\tlastChanged: 'today, 14:30'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: 4321,\n\t\t\t\t\t\tusername: 'John Snow',\n\t\t\t\t\t\tstatus: {\n\t\t\t\t\t\tstate: 'offline',\n\t\t\t\t\t\tlastChanged: '14 July, 20:00'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t]\n \t\t\t\t}\t\n\t\t\t\n\t\t\tfirebase.firestore().collection('messages').doc(doc.id)\n\t\t\t.collection('messages')\n\t\t\t.orderBy('timestamp', 'desc')\n\t\t\t.limit(1)\n\t\t\t.get().then((info) => {\n\t\t\t\tinfo.forEach((response) => {\n\t\t\t\troomTemplate.lastMessage.content = response.data().content\n\t\t\t\troomTemplate.lastMessage.senderId = response.data().senderId\n\t\t\t\troomTemplate.lastMessage.username = response.data().username\n\t\t\t\tvar wordlyTimestamp = response.data().timestamp\n\t\t\t\troomTemplate.lastMessage.timestamp = wordlyTimestamp\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tif(doc.data().firstUser.name === this.$store.state.user.name){\n\t\t\t\troomTemplate.roomId = doc.id\n\t\t\t\troomTemplate.timestamp = firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t\troomTemplate.roomName = doc.data().secondUser.name\n\t\t\t\troomTemplate.users[0]._id = doc.data().secondUser.id\n\t\t\t\troomTemplate.users[0].username = doc.data().secondUser.name\n\t\t\t\tfirebase.firestore()\n\t\t\t\t.collection('users')\n\t\t\t\t.doc(doc.data().secondUser.id)\n\t\t\t\t.get().then((fire_state) => {\n\t\t\t\t\tif(fire_state.data().online == 'true'){\n\t\t\t\t\troomTemplate.users[0].status.state = 'online'\n\t\t\t\t\t}else{\n\t\t\t\t\troomTemplate.users[0].status.state = 'offline'\n\t\t\t\t\t}\n\t\t\t\t\troomTemplate.users[0].status.lastChanged = fire_state.data().lastChanged\n\t\t\t\t})\n\t\t\t\troomTemplate.username = doc.data().secondUser.name\n\t\t\t}\n\t\t\telse{\n\t\t\t\troomTemplate.roomId = doc.id\n\t\t\t\troomTemplate.timestamp = firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t\troomTemplate.roomName = doc.data().firstUser.name\n\t\t\t\troomTemplate.users[1]._id = doc.data().firstUser.id \n\t\t\t\troomTemplate.users[1].username = doc.data().firstUser.name\n\t\t\t\tfirebase.firestore()\n\t\t\t\t.collection('users')\n\t\t\t\t.doc(doc.data().firstUser.id)\n\t\t\t\t.get().then((fire_state) => {\n\t\t\t\t\tif(fire_state.data().online == 'true'){\n\t\t\t\t\troomTemplate.users[1].status.state = 'online'\n\t\t\t\t\t}else{\n\t\t\t\t\troomTemplate.users[1].status.state = 'offline'\n\t\t\t\t\t}\n\t\t\t\t\troomTemplate.users[1].status.lastChanged = fire_state.data().lastChanged\n\t\t\t\t})\n\t\t\t\troomTemplate.username = doc.data().firstUser.name\n\t\t\t}\n\t\t\tthis.rooms.push(roomTemplate)\n\t\t})\n\n\t\tthis.roomsLoaded = true\n\t},\n\tcreated () {\n\n\t},\n    data: () => ({\n      cards: ['Today', 'Yesterday'],\n\t  roomsLoaded: false,\n\t  messagesLoaded: true,\n      drawer: null,\n      currentUserId: null,\n\t  currentRoomId: null,\n\t  height: '100%',\n\t  rooms: [],\n\t  messages:[],\n      links: [\n        ['mdi-inbox-arrow-down', 'Inbox'],\n        ['mdi-send', 'Send'],\n        ['mdi-delete', 'Trash'],\n        ['mdi-alert-octagon', 'Spam'],\n      ],\n    }),\n\tcomponents: {\n      ChatWindow\n    }\n  }\n\n</script>\n\n\n<!-- Rooms prop \nrooms=\"[\n  {\n    roomId: 1,\n    roomName: 'Room 1',\n    lastMessage: {\n      content: 'Last message received',\n      sender_id: 1234,\n      username: 'John Doe',\n      timestamp: '10:20',\n      date: 123242424,\n      seen: false,\n      new: true\n    },\n    users: [\n      {\n        _id: 1234,\n        username: 'John Doe',\n        status: {\n          state: 'online',\n          last_changed: 'today, 14:30'\n        }\n      },\n      {\n        _id: 4321,\n        username: 'John Snow',\n        status: {\n          state: 'offline',\n          last_changed: '14 July, 20:00'\n        }\n      }\n    ],\n    typingUsers: [ 4321 ]\n  }\n]\"\n-->"],"sourceRoot":"src/views"}]}