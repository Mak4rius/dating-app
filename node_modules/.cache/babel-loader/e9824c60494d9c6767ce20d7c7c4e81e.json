{"remainingRequest":"/Users/admin/web/app/node_modules/babel-loader/lib/index.js!/Users/admin/web/app/src/store/index.js","dependencies":[{"path":"/Users/admin/web/app/src/store/index.js","mtime":1632511727363},{"path":"/Users/admin/web/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/web/app/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/admin/web/app/src/store/index.js"],"names":["Vue","Vuex","firebase","doc","updateDoc","arrayUnion","arrayRemove","User","common","chat","use","Store","state","user","mutations","setUser","payload","addChat","chats","push","clearUser","actions","getUsers","commit","firestore","collection","get","user_collection","console","log","forEach","id","data","registerUser","email","password","name","age","city","sex","height","weight","auth","createUserWithEmailAndPassword","timestamp","FieldValue","serverTimestamp","unique_user","uid","online","lastChanged","set","create_user","message","loginUser","signInWithEmailAndPassword","update","updating","actual_user","loggedUser","logoutUser","signOut","getters","checkUser","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport firebase from \"firebase\"\nimport { doc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\"\n// We import the helper class that will hold the information about our user. \nimport User from \"./user_help\"\nimport common from \"./common\"\nimport chat from \"./chat\"\n\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: {\n\tuser: null,\n  },\n  mutations: {\n\t  setUser(state, payload){\n\t\t  state.user = payload\n\t  },\n\t  addChat(state, payload){\n\t\t  state.user.chats.push(payload)\n\t  },\n\t  clearUser(state){\n\t\t  state.user = null\n\t  }\n  },\n  actions: {\n\tasync getUsers({commit}){\n\t\ttry{\n\t\t\tconst user_collection = await firebase.firestore().collection('users').get()\n\t\t\tconsole.log(user_collection)\n\t\t\tuser_collection.forEach((doc) => {\n\t\t\t\t// doc.data() is never undefined for query doc snapshots\n\t\t\t\tconsole.log(doc.id, \" => \", doc.data());\n\t\t\t})\n\t\t\tcommit('setUserList', user_collection)\n\n\t\t}catch(e){\n\t\t\tconsole.log(e)\n\t\t}\n\t},\n\n\tasync registerUser({commit}, {email, password, name, age, city, sex, height, weight}){\n\t\t/**\n\t\t * This function register a user, and pass all the information about the user in the local storage.\n\t\t * user: \n\t\t * \tid: user_id\n\t\t * \tname: user_name\n\t\t * \tage: user_age \n\t\t * \tsex: user_sex \n\t\t *  height: user_height\n\t\t * \tweight: user_weight\n\t\t * \tonline: True if user online, otherwise false\n\t\t */\n\t\tcommit('clearError')\n\t\tcommit('setLoading', true)\n\t\ttry{\n\t\tconst user = await firebase.auth().createUserWithEmailAndPassword(email, password)\n\t\t// We create a blueprint with the set of parameters for our user\n\t\tvar timestamp = firebase.firestore.FieldValue.serverTimestamp()\n\t\tconst unique_user = {\n\t\t\tid: user.user.uid,\n\t\t\tname:  name,\n\t\t\tage: age,\n\t\t\tcity: city,\n\t\t\tsex: sex,\n\t\t\theight: height,\n\t\t\tweight: weight,\n\t\t\tonline: true,\n\t\t\tlastChanged: timestamp\n\t\t}\n\t\t// We add a user, with specific id to collection\n\t\tconst create_user = await firebase.firestore().collection('users').doc(user.user.uid).set({\n\t\t\tname: unique_user.name,\n\t\t\tage: unique_user.age,\n\t\t\tcity: unique_user.city,\n\t\t\tsex: unique_user.sex,\n\t\t\theight: unique_user.height,\n\t\t\tweight: unique_user.weight,\n\t\t\tonline: unique_user.online,\n\t\t\tlastChanged: timestamp\n\t\t})\t\n\n\t\tcommit('setUser', new User(\n\t\t\tunique_user.id, \n\t\t\tunique_user.name,\n\t\t\tunique_user.age,\n\t\t\tunique_user.sex,\n\t\t\tunique_user.city,\n\t\t\tunique_user.height,\n\t\t\tunique_user.weight,\n\t\t\tunique_user.online,\n\t\t\tunique_user.lastChanged\n\t\t\t))\n\t\tcommit('setLoading', false)\n\t    }catch(error){\n\t\t\tcommit('setLoading',false)\n\t\t\tcommit('setError', error.message)\n\t\t\tthrow error\n\t\t}\n\t},\n\t\n\tasync loginUser({commit}, {email, password}){\n\t\t/**\n\t\t * \n\t\t * This function, logins user in, essentially what it means:\n\t\t * is that we retrieve a value from a database, getting all the info and passing it in local storage.\n\t\t * \n\t\t * \n\t\t */\n\t\tcommit('clearError')\n\t\tcommit('setLoading', true) // this mutation allow us to show on the button, when pressed loading\n\t\ttry{\n\t\tconst user = await firebase.auth().signInWithEmailAndPassword(email, password)\n\t\tconst updating = await firebase.firestore().collection('users').doc(user.user.uid).update({\n\t\t\tonline: true,\n\t\t\tlastChanged: firebase.firestore.FieldValue.serverTimestamp()\n\t\t})\n\t\tconst actual_user = await firebase.firestore().collection('users').doc(user.user.uid).get()\n\n\t\tcommit('setUser', new User(\n\t\t\tuser.user.uid, \n\t\t\tactual_user.data().name,\n\t\t\tactual_user.data().age,\n\t\t\tactual_user.data().sex,\n\t\t\tactual_user.data().city,\n\t\t\tactual_user.data().height,\n\t\t\tactual_user.data().weight,\n\t\t\tactual_user.data().online,\n\t\t\tactual_user.data().lastChanged\n\t\t\t))\n\t\tcommit('setLoading',false)\n\t    }catch(error){\n\t\t\tcommit('setLoading',false)\n\t\t\tcommit('setError',error.message)\n\t\t\tthrow error\n\t\t}\n\t},\n\tasync loggedUser({commit}, payload){\n\t\tconst actual_user = await firebase.firestore().collection('users').doc(payload.uid).get()\n\t\tconsole.log(payload.uid)\n\t\tcommit('setUser', \n\t\t\tnew User(\n\t\t\tpayload.uid, \n\t\t\tactual_user.data().name, \n\t\t\tactual_user.data().age,\n\t\t\tactual_user.data().sex, \n\t\t\tactual_user.data().city, \n\t\t\tactual_user.data().height, \n\t\t\tactual_user.data().weight,\n\t\t\tactual_user.data().online,\n\t\t\tactual_user.data().lastChanged\n\t\t\t))\n\n\t},\n\tasync logoutUser({commit}){\n\t\tconsole.log(this.state.user.uid)\n\t\tawait firebase.firestore().collection('users').doc(this.state.user.id).update({\n\t\t\tonline: false,\n\t\t\tlastChanged: firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t})\n\t\tawait firebase.auth().signOut()\n\t\tcommit('clearUser')\n\t\tconsole.log('You are logged out!!!')\n\n\t}\n  },\n  getters:{\n\tuser (state){\n\t\treturn state.user\n\t},\n\tcheckUser (state){\n\t\treturn state.user !== null\n\t}\n  },\n  modules: {\n\t  common,\n\t  chat\n  }\n})\n"]}]}