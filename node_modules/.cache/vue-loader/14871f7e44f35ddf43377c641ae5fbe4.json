{"remainingRequest":"/Users/admin/web/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/web/app/src/components/AvatarPicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/web/app/src/components/AvatarPicker.vue","mtime":1628184087843},{"path":"/Users/admin/web/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/web/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/admin/web/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/web/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIHByb3BzOiB7CiAgICAgICAgY3VycmVudEF2YXRhcjogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB2YWx1ZTogQm9vbGVhbgogICAgfSwKICAgIGFzeW5jIG1vdW50ZWQgKCkgewogICAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdmZXRjaEF2YXRhcnMnKQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgYXZhdGFycyAoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5hdmF0YXJzCiAgICAgICAgfSwKICAgICAgICBzaG93OiB7CiAgICAgICAgICAgIGdldCAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52YWx1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICBzZXQgKHZhbHVlKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbHVlKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBzZWxlY3RBdmF0YXIgKGF2YXRhcikgewogICAgICAgICAgICB0aGlzLiRlbWl0KCdzZWxlY3RlZCcsIGF2YXRhci5pZCkKICAgICAgICAgICAgdGhpcy5zaG93ID0gZmFsc2UKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["AvatarPicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AvatarPicker.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-dialog :fullscreen=\"$vuetify.breakpoint.xs\" width=\"500\" transition=\"dialog-bottom-transition\" v-model=\"show\">\n        <v-card>\n            <v-toolbar dark color=\"primary\">\n                <v-btn icon dark @click=\"show = false\">\n                    <v-icon>close</v-icon>\n                </v-btn>\n                <v-toolbar-title>Select an Avatar</v-toolbar-title>\n                <v-spacer></v-spacer>\n            </v-toolbar>\n            <v-layout row wrap v-if=\"avatars\">\n                <v-flex\n                    v-for=\"avatar in avatars\"\n                    :key=\"avatar.id\"\n                    xs4 sm3\n                    d-flex>\n                    <v-card tile flat class=\"d-flex\">\n                        <v-card-text class=\"d-flex\">\n                            <v-avatar\n                                size=\"96\"\n                                @click=\"selectAvatar(avatar)\"\n                                class=\"avatar-picker-avatar\"\n                                :class=\"{ 'current': avatar.id === currentAvatar }\">\n                                <img :src=\"'/avatars/' + (avatar.path)\">\n                            </v-avatar>\n                        </v-card-text>\n                    </v-card>\n                </v-flex>\n            </v-layout>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\n    export default {\n        props: {\n            currentAvatar: {\n                type: String,\n                required: true\n            },\n            value: Boolean\n        },\n        async mounted () {\n            await this.$store.dispatch('fetchAvatars')\n        },\n        computed: {\n            avatars () {\n                return this.$store.state.avatars\n            },\n            show: {\n                get () {\n                    return this.value\n                },\n                set (value) {\n                    this.$emit('input', value)\n                }\n            }\n        },\n        methods: {\n            selectAvatar (avatar) {\n                this.$emit('selected', avatar.id)\n                this.show = false\n            }\n        }\n    }\n</script>"]}]}