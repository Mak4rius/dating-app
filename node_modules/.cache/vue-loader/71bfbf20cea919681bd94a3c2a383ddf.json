{"remainingRequest":"/Users/admin/web/app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/admin/web/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/web/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/web/app/src/components/SearchBar.vue?vue&type=template&id=0eca37cb&","dependencies":[{"path":"/Users/admin/web/app/src/components/SearchBar.vue","mtime":1628993174905},{"path":"/Users/admin/web/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/web/app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/admin/web/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/web/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}